name: ubuntu20.04

on:
  workflow_dispatch:
  create:
  push:
  schedule:
    - cron: "0 0 * * *"

jobs:
  scripts-verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACTIONS }}

      - name: preprocessing
        run: |
          sudo apt-get install -y dos2unix
          find -type f -name *.sh| xargs dos2unix
          find -type f -name *.sh| xargs chmod +x

      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: -e SC1071
        with:
          severity: error

  os-ubuntu2004:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distro: ["ubuntu20.04"]
    needs: [scripts-verify]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.ACTIONS }}

      - name: Grant execution permissions
        run: |
          sudo apt-get install -y dos2unix
          find -type f -name *.sh| xargs dos2unix
          find -type f -name *.sh| xargs chmod +x

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to official hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: dockerfiles/os/ubuntu
          file: dockerfiles/os/ubuntu/20.04/${{ matrix.distro }}.dockerfile
          push: true
          tags: |
            sqjian/venv:${{ matrix.distro }}

  sync-images:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to official hub
        uses: docker/login-action@v2
        with:
          registry: registry.cn-hongkong.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Push image to aliyuncs
        run: |
          #!/usr/bin/env bash

          set -euxo pipefail

          sync_image() {
              local source_tag=$1
              local dest_tag=$2

              docker pull "sqjian/venv:${source_tag}"
              docker tag "sqjian/venv:${source_tag}" "registry.cn-hongkong.aliyuncs.com/vsc-github/venv:${dest_tag}"
              docker push "registry.cn-hongkong.aliyuncs.com/vsc-github/venv:${dest_tag}"
              docker rmi "sqjian/venv:${source_tag}" "registry.cn-hongkong.aliyuncs.com/vsc-github/venv:${dest_tag}"
          }

          sync_image "ubuntu20.04" "ubuntu20.04"
